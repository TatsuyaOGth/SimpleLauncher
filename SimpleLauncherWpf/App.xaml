<Application x:Class="SimpleLauncherWpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SimpleLauncherWpf"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <SolidColorBrush x:Key="ButtonColor" Color="LightGray"/>
        <SolidColorBrush x:Key="ButtonFontColor" Color="Black"/>
        <SolidColorBrush x:Key="ButtonPressedColor" Color="LightSlateGray"/>
        <SolidColorBrush x:Key="ButtonHoverColor" Color="LightSteelBlue"/>
        <SolidColorBrush x:Key="DisableColor" Color="DarkGray"/>
        <SolidColorBrush x:Key="DisableTextColor" Color="Black"/>

        <!-- #region List View Item -->
        <Style TargetType="ListViewItem" x:Key="DefaultListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border 
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItem}"/>

        <Style TargetType="Grid" x:Key="ListViewItemGrid">
            <Setter Property="Margin" Value="0, 0, 0, 2"/>
        </Style>
        <!--#endregion-->


        <Style TargetType="Button" x:Key="DefaultButton">
            <Setter Property="Background" Value="{StaticResource ButtonColor}"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonFontColor}" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <Border x:Name="buttonBorder" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonBorder" Property="Background" Value="{StaticResource ButtonHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="buttonBorder" Property="Background" Value="{StaticResource ButtonPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="buttonBorder" Property="Background" Value="{StaticResource DisableColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource DisableTextColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="Button" BasedOn="{StaticResource DefaultButton}"/>

    </Application.Resources>
</Application>
